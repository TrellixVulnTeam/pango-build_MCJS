name: Build Windows
on:
  release:
    types: [created]
jobs:
  build:
    runs-on: windows-2016
    env:
      MSYS2_PATH_TYPE: inherit
      COMMIT_RELEASE_CAIRO: 01683a5882ed8e4629158985da5422e26776d1d3
      PANGO_VERSION: "1.47.0"
      FRIBIDI_VERSION: "1.0.10"
      HARFBUZZ_VERSION: "2.7.2"
      GLIB_VERSION: "2.67.0"
      WORKSPACE: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v2
      - name: Download and Copy Necessary Files
        shell: powershell
        run: ci/win/download.ps1
      - name: Build x86
        run: |
          cd x86
          $prevPath = $env:PATH
          & "$env:WORKSPACE\ci\win\build.ps1" 32
          $env:PATH=$prevPath
          cd ../
      - name: Build x64
        run: |
          cd x64
          $prevPath = $env:PATH
          & "$env:WORKSPACE\ci\win\build.ps1" 64
          $env:PATH = $prevPath
          cd ../
      - name: Pack Assets
        run: |
          7z a pango-build-x86.zip C:\build\x86\*
          7z a pango-build-x64.zip C:\build\amd64\*
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: final-build
          path: "*.zip"
      - name: Handle Release
        id: create_release
        shell: bash
        env:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          tag_act: ${{ github.ref }}
        run: |
          ref_tag=$(python -c "print('${tag_act}'.split('/')[-1])")
          res=$(curl -H "Accept: application/vnd.github.v3+json" -H "Authorization: token ${access_token}" https://api.github.com/repos/ManimCommunity/manim-windows/releases/tags/${ref_tag})
          echo "${res}"
          upload_url=$(python -c "import json;print(json.loads('''${res}''')['upload_url'])")
          echo "::set-output name=upload_url::${upload_url}"
      - name: Upload Release Asset
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: pango-build-x86.zip
          asset_name: pango-build-win86.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        id: upload-release-asset-windows-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: pango-build-x64.zip
          asset_name: pango-build-win64.zip
          asset_content_type: application/zip
